#  *** Функции ***

# *** встроенная функция ввода данных***
# data = input ('введите данные')

# # f строка - редактор
# # {} для включения в принте 
# print(f"вы ввели вот это - {data}")

# создание функций 
# 1 вариант. Функция, принимающая данные (обладающая аргументами)
def func_1(arg_1):
    s = arg_1**2
    w = s + 10
    print(f"результат: {w}") 
#вызов функции 
# func_1(1000)
            
def func_2(a, b, c):
    res = a + b + c
    res +=200 
    print(res)
# func_2(10,5,2)

# функция с определенным аргументом
def func_3(arg_1, arg_2 = 100):
    print(arg_1* arg_2)
# func_3(20, 10)
# func_3(100)
# func_3(3.14)

# 2 вариант. Функция, возвращающая данные
def func_4(arg_1, arg_2):
    res = arg_1 + arg_2
    return res
# d = func_4 (10, 10)
def func_5 (x, y):
    res_1 = x*y
    res_2 = x/y
    return res_1, res_2, x
# первый способ приема данных 

d_1 = func_5(10,2)
# второй способ приема данных 
a, b, c = func_5(10,2)
print (a, b, c)
print(b)

# print(d_1)
# print(d_1[0])

# ***безымянные функции***(лямбда - выражения, лямбда - функции)
# Особенности: 
# - всегда обладают аргументами
# - всегда возвращает результат 

# Пример 1. Лямбда внутри генератора списка
my_list = [(lambda arg_1: arg_1.upper())(i) for i in "Hello"]
# Пример 2. Словарь лямбда-выражений 
my_lambdas = {'*': arg_1, arg_2: arg_1*arg_2, }
print(my_list)
